{"version":3,"sources":["components/Welcome.js","components/tools/Button.js","components/Survey.js","img/logo.png","pages/MainPage.js","components/tools/CircularProgressBar.js","components/Statistics.js","pages/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","useState","tokens","setTokens","useEffect","fetch","endpoint","then","response","json","console","log","catch","err","className","text","map","token","index","href","Button","props","onClick","name","Survey","questions","setQuestions","JSON","stringify","window","location","question","title","options","option","type","id","value","key","checked","answer","onChange","event","newQuestion","a","length","target","push","onValueChange","htmlFor","error","document","getElementById","style","display","innerHTML","message","MainPage","getToken","link","search","substr","split","top","right","fontSize","position","textDecoration","color","alt","src","logo","width","height","CircularProgressBar","sqSize","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","marginTop","cx","cy","r","transform","strokeDasharray","strokeDashoffset","x","y","dy","textAnchor","Statistics","userCount","setUserCount","toFill","setToFill","setPercentage","yesCount","setYesCount","noCount","setNoCount","perYesNo","setPerYesNo","parseInt","yes","no","AdminPage","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.a71b345e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport text from './../lang/tr.json';\r\nimport endpoint from './../config/endpoint.json';\r\n\r\nfunction Welcome() {\r\n\r\n    const [tokens, setTokens] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(endpoint[\"getTokens\"], {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                setTokens(response);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <p>\r\n                {text[\"bad-token\"]}\r\n            </p>\r\n            <p>Deneme için aşağıdaki linkleri kullanabilirsiniz</p>\r\n            <ul>\r\n                {tokens.map((token,index) => (\r\n                    <li key={index}><a href={\"/?token=\"+token}>{\"?token=\"+token}</a></li>\r\n                ))}\r\n            </ul>\r\n        </div>)\r\n}\r\nexport default Welcome;","export default function Button(props) {\r\n    return (<button onClick={props.onClick} className=\"survey-save-btn\">{props.name}</button>);\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport Button from './tools/Button';\r\nimport text from './../lang/tr.json';\r\nimport endpoint from './../config/endpoint.json';\r\n\r\nfunction Survey(props) {\r\n\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(endpoint[\"getQuestions\"], {\r\n            \"method\": \"POST\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            },\r\n            \"body\": JSON.stringify({\r\n                token: props.token\r\n            })\r\n        }).then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                setQuestions(response.questions);\r\n            }).catch(err => {\r\n                window.location.href = \"/\"\r\n                console.log(err);\r\n            });\r\n\r\n    }, []);\r\n\r\n    function setAnswer() {\r\n        fetch(endpoint[\"setAnswer\"], {\r\n            \"method\": \"POST\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            },\r\n            \"body\": JSON.stringify({\r\n                token: props.token,\r\n                questions: questions\r\n            })\r\n        }).then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                if(response.error == null){\r\n                    document.getElementById(\"saveStatus\").style.display=\"block\";\r\n                    document.getElementById(\"saveStatus\").innerHTML=text['success-save'];\r\n                }else{\r\n                    document.getElementById(\"saveStatus\").style.display=\"block\";\r\n                    document.getElementById(\"saveStatus\").innerHTML=response.error.message;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                document.getElementById(\"saveStatus\").style.display=\"none\";\r\n            });\r\n    }\r\n\r\n    function onValueChange(question, event) {\r\n        var newQuestion = [];\r\n        for (var a = 0; a < questions.length; a++) {\r\n            if (questions[a].id === question.id)\r\n                questions[a].answer = event.target.value;\r\n            newQuestion.push(questions[a]);\r\n        }\r\n        setQuestions(newQuestion);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <p>{text[\"please-answer\"]}</p>\r\n            <div className=\"questions-list\">\r\n                {questions.map(question => (\r\n\r\n                    <span key={question.id}>\r\n                        {question.title}\r\n                        <div className=\"wrapper\">\r\n                            {question.options.map((option, index) => (\r\n                                <span key={index}>\r\n                                    <input type=\"radio\" name=\"selected\" id={\"option-\"+index} value={option.key} checked={question.answer === option.key}\r\n                                            onChange={event => onValueChange(question, event)} />\r\n                                    <label htmlFor={\"option-\"+index} className={`option ${question.answer === option.key?'option-'+index:''}`}>\r\n                                        <div className=\"dot\"></div>\r\n                                        <span>{option.value}</span>\r\n                                    </label>\r\n                                </span>\r\n                            ))}\r\n                        </div>\r\n                    </span>\r\n                ))}\r\n            </div>\r\n            <Button name=\"Kayıt Et\" onClick={() => setAnswer()} />\r\n            <p id=\"saveStatus\" style={{display:\"none\"}}>{text['success-save']}</p>\r\n        </div>)\r\n}\r\nexport default Survey;","export default __webpack_public_path__ + \"static/media/logo.34ac6420.png\";","import React from 'react';\r\n\r\nimport Welcome from './../components/Welcome';\r\nimport Survey from './../components/Survey';\r\nimport text from './../lang/tr.json';\r\n\r\nimport logo from './../img/logo.png';\r\nfunction MainPage() {\r\n\r\n    function getToken() {\r\n        var link = window.location.search.substr(1).split(\"=\");\r\n        if (link[0] === \"token\") {\r\n            return link[1];\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"main-root\">\r\n            <a href=\"admin\" style={{top:\"10px\", right:\"10px\", fontSize:\"14px\", position:\"absolute\", textDecoration:\"underline\", color:\"white\"}}>{text[\"admin-page\"]}</a>\r\n            <div className=\"header\"><img alt=\"logo\" src={logo} className=\"logo\" width=\"300\" height=\"105\"/></div>\r\n            <h4>{text[\"app-name\"]}</h4>\r\n            {getToken() === \"\" ? <Welcome/> : <Survey  token={getToken()}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;\r\n","export default function CircularProgressBar(props) {\r\n\r\n    const sqSize = props.sqSize;\r\n    const radius = (props.sqSize - props.strokeWidth) / 2;\r\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n    const dashArray = radius * Math.PI * 2;\r\n    const dashOffset = dashArray - dashArray * props.percentage / 100;\r\n\r\n    return (\r\n        <div style={{marginTop:\"20px\"}}>\r\n            <svg\r\n                width={props.sqSize}\r\n                height={props.sqSize}\r\n                viewBox={viewBox}>\r\n                <circle\r\n                    className=\"circle-background\"\r\n                    cx={props.sqSize / 2}\r\n                    cy={props.sqSize / 2}\r\n                    r={radius}\r\n                    strokeWidth={`${props.strokeWidth}px`} />\r\n                <circle\r\n                    className=\"circle-progress\"\r\n                    cx={props.sqSize / 2}\r\n                    cy={props.sqSize / 2}\r\n                    r={radius}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    transform={`rotate(-90 ${props.sqSize / 2} ${props.sqSize / 2})`}\r\n                    style={{\r\n                        strokeDasharray: dashArray,\r\n                        strokeDashoffset: dashOffset\r\n                    }} />\r\n                <text\r\n                    className=\"circle-text\"\r\n                    x=\"50%\"\r\n                    y=\"50%\"\r\n                    dy=\".3em\"\r\n                    textAnchor=\"middle\">\r\n                    {`${props.percentage}%`}\r\n                </text>\r\n            </svg>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport endpoint from './../config/endpoint.json';\r\nimport text from './../lang/tr.json';\r\nimport CircularProgressBar from './tools/CircularProgressBar';\r\n\r\n\r\n\r\nfunction Statistics() {\r\n\r\n    const [userCount, setUserCount] = useState();\r\n    const [toFill, setToFill] = useState();\r\n    const [percentage, setPercentage] = useState(0);\r\n\r\n    const [yesCount, setYesCount] = useState();\r\n    const [noCount, setNoCount] = useState();\r\n    const [perYesNo, setPerYesNo] = useState(0);\r\n\r\n    useEffect(() => {\r\n        fetch(endpoint[\"getFilling\"], {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                setUserCount(response.userCount);\r\n                setToFill(response.toFill);\r\n                setPercentage(parseInt((100 * response.toFill) / response.userCount))\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n        fetch(endpoint[\"getAnswer\"], {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"content-type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            }\r\n        }).then(response => response.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                setYesCount(response.yes);\r\n                setNoCount(response.no);\r\n                setPerYesNo(parseInt((100 * response.yes) / (response.yes + response.no)))\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"content-sta\">\r\n            <div className=\"statistic-content\">\r\n                <p className=\"statistic-title\">{text['user-filling']}</p>\r\n                <span className=\"statistic-desc\">{text['user-count']}<span className=\"statistic-value\">{userCount}</span></span><br />\r\n                <span className=\"statistic-desc\">{text['user-filling-count']}<span className=\"statistic-value\">{toFill}</span></span>\r\n                <CircularProgressBar\r\n                    strokeWidth=\"10\"\r\n                    sqSize=\"200\"\r\n                    percentage={percentage} />\r\n            </div>\r\n\r\n            <div className=\"statistic-content\">\r\n                <p className=\"statistic-title\">{text['satisfaction-ratio']}</p>\r\n                <span className=\"statistic-desc\">{text['yes-count']}<span className=\"statistic-value\">{yesCount}</span></span><br />\r\n                <span className=\"statistic-desc\">{text['no-count']}<span className=\"statistic-value\">{noCount}</span></span>\r\n                <CircularProgressBar\r\n                    strokeWidth=\"10\"\r\n                    sqSize=\"200\"\r\n                    percentage={perYesNo} />\r\n            </div>\r\n        </div>)\r\n}\r\nexport default Statistics;","import React from 'react';\r\n\r\nimport Statistics from './../components/Statistics';\r\nimport text from './../lang/tr.json';\r\n\r\nimport logo from './../img/logo.png';\r\nfunction AdminPage() {\r\n\r\n    return (\r\n        <div className=\"main-root\">\r\n            <a href=\"/\" style={{top:\"10px\", right:\"10px\", fontSize:\"14px\", position:\"absolute\", textDecoration:\"underline\", color:\"white\"}}>{text[\"main-page\"]}</a>\r\n            <div className=\"header\"><img alt=\"logo\" src={logo} className=\"logo\" width=\"300\" height=\"105\"/></div>\r\n            <h4>{text[\"app-name\"]}</h4>\r\n            {<Statistics/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPage;\r\n","import './App.css';\nimport MainPage from './pages/MainPage';\nimport AdminPage from './pages/AdminPage';\nimport { Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<MainPage />} />\n        <Route path=\"admin\" element={<AdminPage />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}